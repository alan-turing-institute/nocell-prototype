; -*- racket -*-
#lang racket
(require "../../../private/nocell/main.rkt")
(provide result)
(define result
(list
 (assignment '%fact0 '(result) '() '%fact3 24 #f 'result '())
 (assignment '%fact2 '() '() 24 24 #f 'result-mean '())
 (assignment '%fact1 '() '() 0 0 #f 'result-stdev '())
 (assignment '%fact3 '() '((1 . %fact0)) '%fact6 24 #f 'result '())
 (assignment '%fact5 '() '((1 . %fact0)) 24 24 #f 'result-mean '())
 (assignment '%fact4 '() '((1 . %fact0)) 0 0 #f 'result-stdev '())
 (assignment
  '%fact6
  '()
  '((1 . %fact3) (1 . %fact0))
  '%fact9
  24
  #f
  'result
  '())
 (assignment
  '%fact8
  '()
  '((1 . %fact3) (1 . %fact0))
  24
  24
  #f
  'result-mean
  '())
 (assignment '%fact7 '() '((1 . %fact3) (1 . %fact0)) 0 0 #f 'result-stdev '())
 (assignment
  '%fact9
  '()
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  '%fact12
  24
  #f
  'result
  '())
 (assignment
  '%fact11
  '()
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  24
  24
  #f
  'result-mean
  '())
 (assignment
  '%fact10
  '()
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  0
  0
  #f
  'result-stdev
  '())
 (assignment
  '%fact12
  '()
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  '%arg9
  24
  #f
  'result
  '())
 (assignment
  '%fact14
  '()
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  24
  24
  #f
  'result-mean
  '())
 (assignment
  '%fact13
  '()
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  0
  0
  #f
  'result-stdev
  '())
 (assignment
  '%arg9
  '(acc)
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  '%prod3
  24
  #f
  'last-arg
  '())
 (assignment
  '%arg8
  '(n)
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  '%diff3
  0
  #f
  'arg
  '())
 (assignment
  '%prod3
  '()
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  '((* () ()) %arg6 %arg7)
  24
  #f
  'body
  '())
 (assignment
  '%diff3
  '()
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  '((- () ()) %arg6 %e9)
  0
  #f
  'body
  '())
 (assignment
  '%e9
  '()
  '((1 . %fact9) (1 . %fact6) (1 . %fact3) (1 . %fact0))
  1
  1
  #f
  'body
  '())
 (assignment
  '%arg7
  '(acc)
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  '%prod2
  24
  #f
  'last-arg
  '())
 (assignment
  '%arg6
  '(n)
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  '%diff2
  1
  #f
  'arg
  '())
 (assignment
  '%prod2
  '()
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  '((* () ()) %arg4 %arg5)
  24
  #f
  'body
  '())
 (assignment
  '%diff2
  '()
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  '((- () ()) %arg4 %e7)
  1
  #f
  'body
  '())
 (assignment
  '%e7
  '()
  '((1 . %fact6) (1 . %fact3) (1 . %fact0))
  1
  1
  #f
  'body
  '())
 (assignment
  '%arg5
  '(acc)
  '((1 . %fact3) (1 . %fact0))
  '%prod1
  12
  #f
  'last-arg
  '())
 (assignment '%arg4 '(n) '((1 . %fact3) (1 . %fact0)) '%diff1 2 #f 'arg '())
 (assignment
  '%prod1
  '()
  '((1 . %fact3) (1 . %fact0))
  '((* () ()) %arg2 %arg3)
  12
  #f
  'body
  '())
 (assignment
  '%diff1
  '()
  '((1 . %fact3) (1 . %fact0))
  '((- () ()) %arg2 %e5)
  2
  #f
  'body
  '())
 (assignment '%e5 '() '((1 . %fact3) (1 . %fact0)) 1 1 #f 'body '())
 (assignment '%arg3 '(acc) '((1 . %fact0)) '%prod0 4 #f 'last-arg '())
 (assignment '%arg2 '(n) '((1 . %fact0)) '%diff0 3 #f 'arg '())
 (assignment
  '%prod0
  '()
  '((1 . %fact0))
  '((* () ()) %arg0 %arg1)
  4
  #f
  'body
  '())
 (assignment '%diff0 '() '((1 . %fact0)) '((- () ()) %arg0 %e3) 3 #f 'body '())
 (assignment '%e3 '() '((1 . %fact0)) 1 1 #f 'body '())
 (assignment '%arg1 '(acc) '() '%e1 1 #f 'last-arg '())
 (assignment '%arg0 '(n) '() '%e0 4 #f 'arg '())
 (assignment '%e1 '() '() 1 1 #f 'body '())
 (assignment '%e0 '() '() 4 4 #f 'body '())))
